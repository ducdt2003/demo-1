const API_URL = "/api/favorites";

// üü• Th√™m phim v√†o danh s√°ch y√™u th√≠ch
async function addFavorite(userId, movieId) {
    try {
        const response = await fetch(API_URL, {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({ userId, movieId })
        });

        if (!response.ok) {
            throw new Error(`L·ªói API: ${response.status} - ${response.statusText}`);
        }

        alert("Th√™m phim y√™u th√≠ch th√†nh c√¥ng!");
        console.log("ƒê√£ th√™m:", movieId);

        // C·∫≠p nh·∫≠t giao di·ªán n√∫t y√™u th√≠ch
        const button = document.querySelector(`[data-movieId='${movieId}']`);
        if (button) {
            button.classList.add("text-danger");
            button.innerHTML = '<i class="fas fa-heart"></i> ƒê√£ y√™u th√≠ch';
            button.disabled = true;
        }

    } catch (error) {
        console.error("L·ªói:", error);
        alert("C√≥ l·ªói x·∫£y ra khi th√™m phim y√™u th√≠ch!");
    }
}

// üü¶ L·∫•y danh s√°ch phim y√™u th√≠ch c·ªßa ng∆∞·ªùi d√πng
async function getFavorites(userId) {
    try {
        const response = await fetch(`${API_URL}/movies?userId=${userId}`);

        if (!response.ok) throw new Error("Kh√¥ng th·ªÉ l·∫•y danh s√°ch phim y√™u th√≠ch.");

        const favorites = await response.json();
        console.log("Danh s√°ch phim y√™u th√≠ch:", favorites);
        return favorites;

    } catch (error) {
        console.error("L·ªói:", error);
        return [];
    }
}

// üüß X√≥a m·ªôt phim y√™u th√≠ch
async function removeFavorite(userId, movieId) {
    try {
        const response = await fetch(`${API_URL}?userId=${userId}&movieId=${movieId}`, {
            method: "DELETE",
            headers: { "Content-Type": "application/json" }
        });

        if (!response.ok) throw new Error("Kh√¥ng th·ªÉ x√≥a phim y√™u th√≠ch.");

        alert("X√≥a phim y√™u th√≠ch th√†nh c√¥ng!");
        console.log("ƒê√£ x√≥a phim:", movieId);

        // X√≥a kh·ªèi danh s√°ch hi·ªÉn th·ªã
        const movieItem = document.querySelector(`[data-movieId='${movieId}']`).closest(".movie-item");
        if (movieItem) {
            movieItem.remove();
        }

    } catch (error) {
        console.error("L·ªói:", error);
        alert("C√≥ l·ªói x·∫£y ra khi x√≥a phim y√™u th√≠ch!");
    }
}

// üü• X√≥a to√†n b·ªô phim y√™u th√≠ch c·ªßa ng∆∞·ªùi d√πng
async function removeAllFavorites(userId) {
    try {
        const response = await fetch(`${API_URL}/${userId}/all`, {
            method: "DELETE",
            headers: { "Content-Type": "application/json" }
        });

        if (!response.ok) throw new Error("Kh√¥ng th·ªÉ x√≥a to√†n b·ªô phim y√™u th√≠ch.");

        alert("X√≥a to√†n b·ªô phim y√™u th√≠ch th√†nh c√¥ng!");
        console.log("ƒê√£ x√≥a t·∫•t c·∫£ phim y√™u th√≠ch c·ªßa user:", userId);

        // X√≥a t·∫•t c·∫£ ph·∫ßn t·ª≠ kh·ªèi giao di·ªán
        document.querySelectorAll(".movie-item").forEach(item => item.remove());

    } catch (error) {
        console.error("L·ªói:", error);
        alert("C√≥ l·ªói x·∫£y ra khi x√≥a t·∫•t c·∫£ phim y√™u th√≠ch!");
    }
}

// üü¶ X·ª≠ l√Ω s·ª± ki·ªán th√™m & x√≥a phim y√™u th√≠ch
document.addEventListener("DOMContentLoaded", function () {
    // X·ª≠ l√Ω khi nh·∫•n n√∫t "Th√™m v√†o y√™u th√≠ch"
    document.querySelectorAll(".btn-add-favorite").forEach(button => {
        button.addEventListener("click", function () {
            const userId = "1"; // User ID m·∫∑c ƒë·ªãnh l√† 1
            const movieId = this.getAttribute("data-movieId");

            addFavorite(userId, movieId);
        });
    });

    // X·ª≠ l√Ω khi nh·∫•n n√∫t "X√≥a kh·ªèi y√™u th√≠ch"
    document.querySelectorAll(".btn-remove-favorite").forEach(button => {
        button.addEventListener("click", function (event) {
            event.preventDefault();

            const userId = this.getAttribute("data-userId");
            const movieId = this.getAttribute("data-movieId");

            removeFavorite(userId, movieId);
        });
    });
});
